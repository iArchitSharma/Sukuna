name: Build and Publish Sukuna Installer

on:
  workflow_dispatch: # Allows the workflow to be triggered manually

jobs:
  build:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install MinGW-w64
      run: |
        # Download MinGW-w64
        Invoke-WebRequest -Uri https://sourceforge.net/projects/mingw-w64/files/latest/download -OutFile mingw-w64.zip

        # Create destination directory if it doesn't exist
        $destinationPath = 'C:\mingw-w64'
        if (-Not (Test-Path $destinationPath)) {
          New-Item -Path $destinationPath -ItemType Directory
        }

        # Expand the archive
        Expand-Archive -Path mingw-w64.zip -DestinationPath $destinationPath

        # Add MinGW to the PATH
        $env:Path += ";$destinationPath\mingw64\bin"
    
    - name: Build sukuna.exe
      run: |
        & "C:\mingw-w64\mingw64\bin\x86_64-w64-mingw32-g++.exe" -static -o build\sukuna.exe src\*.cpp

    - name: Install NSIS
      run: |
        Invoke-WebRequest -Uri https://nsis.sourceforge.io/mediawiki/images/7/7b/Nsis-3.06.1-setup.exe -OutFile nsis_setup.exe
        Start-Process -Wait -FilePath .\nsis_setup.exe -ArgumentList '/S'
        $env:Path += ";C:\Program Files (x86)\NSIS"

    - name: Build Installer with NSIS
      run: |
        makensis.exe /V4 installer_script.nsi

    - name: Upload Installer and Executable Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: |
          sukuna_installer.exe
          build\sukuna.exe
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
        tag_name: v1.0.0
        release_name: Release v1.0.0
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Upload Release Assets
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: sukuna_installer.exe
        asset_name: sukuna_installer.exe
        asset_content_type: application/octet-stream

    - name: Upload sukuna.exe as Release Asset
      uses: actions/upload-release-asset@v1
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: build\sukuna.exe
        asset_name: sukuna.exe
        asset_content_type: application/octet-stream
